# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

# 使用了pam_ssh，不再需要keychain
#/usr/bin/keychain -Q -q ~/.ssh/id_rsa
#[[ -f $HOME/.keychain/$HOSTNAME-sh ]] && source $HOME/.keychain/$HOSTNAME-sh

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Fix problem that SSH_AUTH_SOCK not updated in tmux
if [ ! -z "$SSH_AUTH_SOCK" -a "$SSH_AUTH_SOCK" != "$HOME/.ssh/ssh_auth_sock" -a -d "$HOME/.ssh" ] ; then
    unlink "$HOME/.ssh/ssh_auth_sock" 2>/dev/null
    ln -s "$SSH_AUTH_SOCK" "$HOME/.ssh/ssh_auth_sock"
    export SSH_AUTH_SOCK="$HOME/.ssh/ssh_auth_sock"
fi

DOTFILES_ROOT="$HOME/.dotfiles"

shopt -s extglob

typeset -a bin_dirs config_files

shopt -s nullglob
bin_dirs=($DOTFILES_ROOT/*/bin)
config_files=( $DOTFILES_ROOT/*/*.bash $DOTFILES_ROOT/*/*.sh )
shopt -u nullglob

for d in ${bin_dirs[@]}
do
    export PATH="$PATH:$d"
done
unset d bin_dirs

# load the path files
for f in "${config_files[@]}"
do
    if [[ "$f" =~ .*/path\.(bash|sh)$ ]]
    then
        source $f
    fi
done
unset f

# load the env files
for f in "${config_files[@]}"
do
    if [[ "$f" =~ .*/env\.(bash|sh)$ ]]
    then
        source $f
    fi
done
unset f

# load everything but the env, path and completion files
for f in "${config_files[@]}"
do
    if [[ ! "$f" =~ .*/(path|completion(_[^/]*)?)\.(bash|sh)$ ]]
    then
        source $f
    fi
done
unset f

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# load every completion after autocomplete loads
for f in "${config_files[@]}"
do
    if [[ "$f" =~ .*/completion(_[^/]*)?\.(bash|sh)$ ]]
    then
        source $f
    fi
done
unset f

unset config_files
