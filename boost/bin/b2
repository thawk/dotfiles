#!/bin/sh

MAX_PROCESSES=20
CURCWD=${PWD}

dir="${CURCWD}"
while [ -d "${dir}" ]
do
    for d in . lib 3rd lib/cppf/common/3rd lib/msgbus/3rd
    do
        if [ -d "${dir}/${d}" ]
        then
            BOOST_ROOT=$(find "${dir}/${d}/" -maxdepth 1 -type d -name "boost_[0-9]*" | sort -r | head -n 1)
            if [ -d "${BOOST_ROOT}/boost" ]
            then
                break 2
            fi
        fi
    done

    parent=$(dirname "${dir}")
    if [ "${parent}" = "${dir}" ]
    then
        break
    fi

    dir=${parent}
done

if [ ! -d "${BOOST_ROOT}" ]
then
    echo "boost ('${BOOST_ROOT}') not found or not executable! "
    exit 1
fi

export $(basename "${BOOST_ROOT}" | sed "s/boost_/BOOST_ROOT_/")=${BOOST_ROOT}
for d in tools/build boost_build
do
    if [ -x "${BOOST_ROOT}/${d}/bootstrap.sh" ]
    then
        BOOST_BUILD_PATH="${BOOST_ROOT}/${d}"
        B2="${BOOST_BUILD_PATH}/b2"
        if [ ! -e "${B2}" ]
        then
            cd "${BOOST_BUILD_PATH}"
            ./bootsrap.sh
            cd "${CURCWD}"
        fi
        break
    fi
done

if [ ! -x "${B2}" ]
then
    echo "b2 ('${B2}') not found or not executable! "
    exit 1
fi

export BOOST_ROOT
export BOOST_BUILD_PATH

cpu_count=$(grep "processor" /proc/cpuinfo | wc -l)
[ $cpu_count -ge 1 ] || cpu_count=1
[ $cpu_count -ge 5 ] && cpu_count=$((cpu_count - 2))
[ $cpu_count -ge $MAX_PROCESSES ] && cpu_count=$MAX_PROCESSES

${B2} -j${cpu_count} "$@"

