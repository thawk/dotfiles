#zmodload zsh/zprof

autoload -U colors && colors

# User specific aliases and functions
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# DOTFILES_ROOT="$(dirname $(dirname "$(readlink -f "$0")"))"
export DOTFILES_ROOT="$HOME/.dotfiles"
export DOTFILES_LOCAL="${XDG_CACHE_HOME:-$HOME/.cache}/dotfiles"

[ -f "${DOTFILES_LOCAL}/system/editor" ] && source "${DOTFILES_LOCAL}/system/editor"

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

VIRTUALENVWRAPPER_PYTHON=$(which python3 2> /dev/null)

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# If current shell doesn't contains zsh, set to zsh
[[ "$SHELL" =~ zsh ]] || export SHELL=$(which zsh)
#export ZSH_TMUX_AUTOSTART="true"
#export ZSH_TMUX_AUTOQUIT="false"

# 在顶层zsh中是不会执行到后面的内容，所以专门source一些需要在顶层载入的内容
if [ "$SHLVL" -eq 1 ]
then
    [[ -a ~/.localrc ]] && source ~/.localrc top
    [[ -a ~/.zshrc.local ]] && source ~/.zshrc.local top

    [ -f "$DOTFILES_LOCAL/stage0.zsh" ] && source "$DOTFILES_LOCAL/stage0.zsh"

    # Fix problem that SSH_AUTH_SOCK not updated in tmux
    if [ ! -z "$SSH_AUTH_SOCK" -a -e "$SSH_AUTH_SOCK" -a "$SSH_AUTH_SOCK" != "$HOME/.ssh/ssh_auth_sock" -a -d "$HOME/.ssh" ] ; then
        unlink "$HOME/.ssh/ssh_auth_sock" 2>/dev/null
        ln -s "$SSH_AUTH_SOCK" "$HOME/.ssh/ssh_auth_sock"
        export SSH_AUTH_SOCK="$HOME/.ssh/ssh_auth_sock"
    fi

    case "$TERM_PROGRAM" in
        vscode)
            ;;
        *)
            if (( $+commands[tmux] )); then
                command tmux -2 attach

                # Failed to attach, start new session
                if [[ $? -ne 0 ]]; then
                    command tmux -2 new-session
                fi
            fi
            ;;
    esac
fi

# Disable oh-my-zsh autoupdate
DISABLE_AUTO_UPDATE=true

# Stash your environment variables in ~/.zshrc.local. This means they'll stay out
# of your main dotfiles repository (which may be public), but you'll have access
# to them in your scripts.
[[ -a ~/.localrc ]] && source ~/.localrc
[[ -a ~/.zshrc.local ]] && source ~/.zshrc.local

[ -f "$DOTFILES_LOCAL/stage0.zsh" ] && source "$DOTFILES_LOCAL/stage0.zsh"
[ -f "$DOTFILES_LOCAL/stage1.zsh" ] && source "$DOTFILES_LOCAL/stage1.zsh"
 
source "$DOTFILES_ROOT/zsh/scripts/zi.plugins.zsh"

precmd () {
    local ESC="\033"
    local BEL="\007"
    local DSC="${ESC}P"
    local OSC="${ESC}]"

    if [ -z "$TMUX" ]; then
        echo -n "${OSC}1337;CurrentDir=$(pwd)${BEL}"
    else
        echo -n "${DSC}tmux;${ESC}${OSC}1337;CurrentDir=$(pwd)${BEL}${ESC}\\"
    fi
}

[ -f "$DOTFILES_LOCAL/stage2.zsh" ] && source "$DOTFILES_LOCAL/stage2.zsh"

# compsys initialization once per 24 hours
autoload -Uz compinit
setopt EXTENDEDGLOB
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
unsetopt EXTENDEDGLOB
compinit -C

#zprof
