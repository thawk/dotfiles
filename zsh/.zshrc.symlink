if [ ! -f ${HOME}/.zgen/zgen.zsh ]
then
    echo 'Cloning zgen...'
    git clone https://github.com/tarjoilija/zgen.git "${HOME}/.zgen"
    if [ "$?" -ne "0" ]; then
        echo "Failed to clone zgen!"
        echo 'Execute the following command get zgen:' > /dev/stderr
        echo '    git clone https://github.com/tarjoilija/zgen.git "${HOME}/.zgen"' > /dev/stderr
        return 1
    fi
fi

_load_plugins() {
    # load zgen
    source "${HOME}/.zgen/zgen.zsh"

    # if the init scipt doesn't exist
    if ! zgen saved; then
        # OhMyZsh global plugin
        zgen oh-my-zsh

        # Tmux
        zgen oh-my-zsh plugins/tmux

        # util used by some plugins
        zgen load mafredri/zsh-async

        # 一些缺省值
        zgen load willghatch/zsh-saneopt

        # Python
        zgen oh-my-zsh plugins/pip
        zgen oh-my-zsh plugins/python
        # mkvenv创建virtualenv，在cd时自动切换
        zgen oh-my-zsh plugins/virtualenvwrapper
        zgen load MichaelAquilina/zsh-autoswitch-virtualenv
        # 用pip-app安装的每个pip都有自己的virtualenv
        zgen load sharat87/pip-app

        # Javascript
        zgen oh-my-zsh plugins/npm

        # ZAW
        zgen load zsh-users/zaw
        zgen load junkblocker/calibre-zaw-source

        # Misc
        zgen oh-my-zsh plugins/safe-paste
        # <ESC><ESC>为当前命令加上sudo
        zgen load hcgraf/zsh-sudo

        # 如果使用的命令有定义alias，会进行提醒
        zgen load djui/alias-tips

        # VCS 
        zgen oh-my-zsh plugins/gitfast

        # GeekNote: cmdline for evernote
        zgen load s7anley/zsh-geeknote

        # Asciidoctor
        zgen load sparsick/asciidoctor-zsh

        # 外观调整
        zgen load zlsun/solarized-man
        zgen load jreese/zsh-titles

        # themes
        zgen oh-my-zsh themes/agnoster

        # 自动建议、补全
        # Very cool plugin that generates zsh completion functions for commands
        # if they have getopt-style help text. It doesn't generate them on the fly,
        # you'll have to explicitly generate a completion, but it's still quite cool.
        # 用gencomp命令生成补全文件。
        zgen load RobSis/zsh-completion-generator

        zgen load psprint/history-search-multi-word
        # zgen load hchbaw/auto-fu.zsh
        zgen load zsh-users/zsh-autosuggestions
        zgen load zsh-users/zsh-completions src
        zgen load zsh-users/zsh-syntax-highlighting

        # generate the init script from plugins above
        zgen save
    fi
}

# DOTFILES_ROOT="$(dirname $(dirname "$(readlink -f "$0")"))"
DOTFILES_ROOT="$HOME/.dotfiles"

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

VIRTUALENVWRAPPER_PYTHON=$(which python3)

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# If current shell doesn't contains zsh, set to zsh
[[ "$SHELL" =~ zsh ]] || export SHELL=$(which zsh)
export ZSH_TMUX_AUTOSTART="true"
export ZSH_TMUX_AUTOQUIT="false"

# 由于启用了tmux插件，在顶层zsh中是不会执行到oh-my-zsh.sh后面的内容的，所以专门source一些需要在顶层载入的内容
if [ "$SHLVL" -eq 1 ]
then
    # 在顶层SHELL中恢复base16的配色
    [ -e "$DOTFILES_ROOT/base-16/env.sh" ] && source "$DOTFILES_ROOT/base-16/env.sh"

    # Fix problem that SSH_AUTH_SOCK not updated in tmux
    if [ ! -z "$SSH_AUTH_SOCK" -a -e "$SSH_AUTH_SOCK" -a "$SSH_AUTH_SOCK" != "$HOME/.ssh/ssh_auth_sock" -a -d "$HOME/.ssh" ] ; then
        unlink "$HOME/.ssh/ssh_auth_sock" 2>/dev/null
        ln -s "$SSH_AUTH_SOCK" "$HOME/.ssh/ssh_auth_sock"
        export SSH_AUTH_SOCK="$HOME/.ssh/ssh_auth_sock"
    fi
fi

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public), but you'll have access
# to them in your scripts.
[[ -a ~/.localrc ]] && source ~/.localrc
[[ -a ~/.zshrc.local ]] && source ~/.zshrc.local

_load_plugins

[ -f "$DOTFILES_ROOT/boot.zsh" ] && source "$DOTFILES_ROOT/boot.zsh"

# compsys initialization
autoload -U compinit
compinit
